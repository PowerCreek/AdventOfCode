@page "/elfcalories"
@using CalorieCountingElves.Project;
@using Microsoft.AspNetCore.Html

<style>
    .enter-input{
        padding: 8px;
        margin: 8px;
        border-radius: 4px;
        background-color: lightblue;
        width: min-content;
        height: min-content;
        white-space: nowrap;
    }

    .text-blocks{
        padding: 4px;
        margin: 4px;
    }

</style>

<div >Elf Calories</div>

<textarea @bind=@CalorieProcessor.InputString/>
<div class="enter-input" @onclick=@OnSubmitInput>Submit</div>

<div class="text-blocks">Part 1 Answer: </div>
<div class="text-blocks">@TopElfCalorieAnswer</div>
<br/>
<div class="text-blocks">Part 2 Answer: </div>

<div class="text-blocks">Total Calories = @SumOfTheTopElvesCount</div>
<div class="text-blocks">@TopThreeElvesAnswer</div>

@code{

    public CalorieProcessor CalorieProcessor = new CalorieProcessor();

    public string TopElfCalorieAnswer { get; set; }
    public RenderFragment TopThreeElvesAnswer { get; set; }

    public long? SumOfTheTopElvesCount { get; set; }

    public async void OnSubmitInput(MouseEventArgs args)
    {
        var topElfResult = await Task.Run(()=>CalorieProcessor.GetElfWithTheMostCalories(CalorieProcessor));

        TopElfCalorieAnswer = $"Elf #{topElfResult?.Id} has {topElfResult?.Calories} calories";

        RenderFragment answer = default;

        var elvesOrderedList = (await Task.Run(() => CalorieProcessor.GetElvesSortedByCalories(CalorieProcessor).TakeWhile((a, i) => i < 3)));

        foreach (var v in elvesOrderedList){
            answer +=(@<div>@($"Elf #{v.Id} with {v.Calories} calories")</div>);
        }

        SumOfTheTopElvesCount = elvesOrderedList.Sum(a=>a.Calories);

        TopThreeElvesAnswer = answer;

        InvokeAsync(StateHasChanged);
    }
}